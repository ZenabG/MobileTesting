name: Android E2E Tests

on:
  workflow_dispatch:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

jobs:
  build:
    runs-on: ubuntu-latest

    env:
      CI: true
      PLATFORM_NAME: Android
      PLATFORM_VERSION: 11.0
      DEVICE_NAME: Samsung Galaxy S10
      ADB_PORT: 5037  # Default ADB port

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Start Docker Network
        run: |
          docker network create e2e-network  

      - name: Start Android Emulator in Docker
        run: |
          docker run -d --network e2e-network -p 6080:6080 -e EMULATOR_DEVICE="Samsung Galaxy S10" -e WEB_VNC=true --device /dev/kvm --name android-container budtmo/docker-android:emulator_11.0

      - name: Verify Emulator is Running
        run: |
          for i in {1..30}; do
            if docker exec android-container cat device_status 2>/dev/null; then
              echo "Emulator is ready!"
              exit 0
            fi
            echo "Waiting for emulator to be ready..."
            sleep 5
          done
          echo "Emulator did not start in time" && exit 1

      - name: Check Emulator Status
        run: |
          docker exec android-container adb devices 

      - name: Get Emulator Device ID
        id: get-device-id
        run: |
          EMULATOR_ID=$(docker exec android-container adb devices | grep emulator | cut -f1)
          echo "EMULATOR_ID=$EMULATOR_ID" >> $GITHUB_ENV

      - name: Start Appium Server in Docker
        run: |
          docker run --privileged -d --network e2e-network -p 4723:4723 --device=/dev/${EMULATOR_ID} -e APPIUM_HOST="127.0.0.1" --name appium-container appium/appium

      - name: Connect Appium to Emulator
        run: |
          docker exec appium-container /bin/bash -c "adb connect android-container:6080"
          docker exec appium-container /bin/bash -c "adb devices"  # Verify device connection

      - name: Run Tests in a Docker Container
        run: |
          docker run --rm \
            --network e2e-network \
            -v ${{ github.workspace }}:/workspace \
            -v $HOME/.m2:/root/.m2 \
            -w /workspace \
            maven:3.9.6-eclipse-temurin-17 mvn clean test